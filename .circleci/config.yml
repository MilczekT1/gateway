version: 2

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
#          filters:
#            branches:
#              only: master

jobs:
  build:
    docker:
      - image: circleci/openjdk:11.0.3-jdk-stretch
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - setup_remote_docker:
          version: 18.05.0-ce
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - "5f:9d:14:91:16:7c:39:92:67:55:6d:78:65:7e:f4:64"
      - run:
          name: Clone Chassis
          command: |
            GIT_SSH_COMMAND="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" git clone git@bitbucket.org:konradboniecki/chassis.git ~/chassisRepo
      - checkout
      #_______________________________________________________________

      - run:
          name: Install maven
          command: |
            sudo apt-get update
            sudo apt-get install maven
      - run:
          name: Install Chassis, stubs for contracts and download dependencies
          command: |
            LESS_LOGS=-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
            cd ~/chassisRepo
            mvn clean install -DskipTests=true -B $LESS_LOGS
            cd ~/repo
            mvn dependency:go-offline -B $LESS_LOGS
      - run:
          name: Build and run tests
          command: |
            mvn clean install -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
      - run:
          name: Build and push docker image
          command: |
            VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
            if [ "$CIRCLE_BRANCH" == "master" ]; then
              TAG=$CIRCLE_PROJECT_REPONAME-$VERSION
            fi
            if [ "$CIRCLE_BRANCH" != "master" ]; then
              TAG=$CIRCLE_PROJECT_REPONAME-$VERSION-PR-$CIRCLE_BUILD_NUM
            fi

            docker build -t konradboniecki/budget:$TAG .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push konradboniecki/budget:$TAG

            mkdir shared_workspace
            touch shared_workspace/tag.txt
            echo $TAG > shared_workspace/tag.txt
      - store_test_results:
          paths:
            - target/surefire-reports
      - store_artifacts:
          path: target/surefire-reports/surefire-report.html
      - store_artifacts:
          path: target/site/jacoco/
      - store_artifacts:
          path: target/surefire-reports
      - persist_to_workspace:
          root: ~/repo
          paths:
            - shared_workspace
  deploy:
    machine:
      enabled: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - "e7:ba:ee:08:1c:20:e5:43:d1:fe:81:1d:0b:a5:ad:d1"
      - attach_workspace:
          at: ~/repo
      - run:
          name: Deploy Over SSH
          command: |
            cd /home/circleci/repo/shared_workspace
            export LC_GATEWAY_TAG=$(cat tag.txt)
            echo "================ ATTEMPTING TO DEPLOY $LC_GATEWAY_TAG ================"
            ssh -t -o SendEnv=LC_GATEWAY_TAG root@77.55.237.245 'GATEWAY_TAG=$LC_GATEWAY_TAG; unset LC_GATEWAY_TAG; export GATEWAY_TAG; echo "export GATEWAY_TAG=$GATEWAY_TAG" >> ~/.bashrc; docker-compose -f /root/BUDGET/docker-compose.yaml up -d --no-deps gateway'
          no_output_timeout: 3m
